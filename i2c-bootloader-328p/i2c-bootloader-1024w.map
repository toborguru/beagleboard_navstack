Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              i2c-bootloader-led.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

smbuscount          0x1               i2c-bootloader-led.o
Checksum            0x1               i2c-bootloader-led.o
pageaddr            0x4               i2c-bootloader-led.o
kommando            0x1               i2c-bootloader-led.o
timeout             0x2               i2c-bootloader-led.o
byteanzahl          0x1               i2c-bootloader-led.o
buf                 0x80              i2c-bootloader-led.o
smbuscommand        0x1               i2c-bootloader-led.o
bufaddr             0x1               i2c-bootloader-led.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
Address of section .text set to 0x7800
LOAD i2c-bootloader-led.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00007800      0x48e
 *(.vectors)
 .vectors       0x00007800       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x00007800                __vectors
                0x00007800                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00007868                . = ALIGN (0x2)
                0x00007868                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00007868        0x0 linker stubs
 *(.trampolines*)
                0x00007868                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00007868                __ctors_start = .
 *(.ctors)
                0x00007868                __ctors_end = .
                0x00007868                __dtors_start = .
 *(.dtors)
                0x00007868                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00007868        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x00007868                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00007868        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00007874       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00007874                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00007884        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000788c        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000788c                __vector_22
                0x0000788c                __vector_1
                0x0000788c                __vector_12
                0x0000788c                __bad_interrupt
                0x0000788c                __vector_6
                0x0000788c                __vector_3
                0x0000788c                __vector_23
                0x0000788c                __vector_25
                0x0000788c                __vector_11
                0x0000788c                __vector_13
                0x0000788c                __vector_17
                0x0000788c                __vector_19
                0x0000788c                __vector_7
                0x0000788c                __vector_5
                0x0000788c                __vector_4
                0x0000788c                __vector_9
                0x0000788c                __vector_2
                0x0000788c                __vector_21
                0x0000788c                __vector_15
                0x0000788c                __vector_8
                0x0000788c                __vector_14
                0x0000788c                __vector_10
                0x0000788c                __vector_16
                0x0000788c                __vector_18
                0x0000788c                __vector_20
 .text          0x00007890      0x3fa i2c-bootloader-led.o
                0x00007890                blink
                0x000078c2                __vector_24
                0x00007b24                init_twi
                0x00007b58                boot_program_page
                0x00007bd4                main
 .text          0x00007c8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x00007c8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00007c8a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00007c8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00007c8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00007c8a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00007c8a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x00007c8a                exit
                0x00007c8a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00007c8a        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00007c8e                _etext = .

.data           0x00800100        0x0 load address 0x00007c8e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 i2c-bootloader-led.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x8c
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800100        0x0 i2c-bootloader-led.o
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800100       0x8c i2c-bootloader-led.o
                0x00800100                smbuscount
                0x00800101                Checksum
                0x00800102                pageaddr
                0x00800106                kommando
                0x00800107                timeout
                0x00800109                byteanzahl
                0x0080010a                buf
                0x0080018a                smbuscommand
                0x0080018b                bufaddr
                0x0080018c                PROVIDE (__bss_end, .)
                0x00007c8e                __data_load_start = LOADADDR (.data)
                0x00007c8e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080018c        0x0
                0x0080018c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080018c                PROVIDE (__noinit_end, .)
                0x0080018c                _end = .
                0x0080018c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1278
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006b4      0xbc4 i2c-bootloader-led.o
                                0xbd0 (size before relaxing)

.stabstr        0x00000000      0xbea
 *(.stabstr)
 .stabstr       0x00000000      0xbea /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(i2c-bootloader-1024w elf32-avr)
LOAD linker stubs
