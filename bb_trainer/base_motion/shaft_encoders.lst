   1               		.file	"shaft_encoders.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
  72               	.global	Shaft_Encoders_Init
  74               	Shaft_Encoders_Init:
  75               		.stabd	46,0,0
   1:base_motion/shaft_encoders.c **** /************************************************
   2:base_motion/shaft_encoders.c ****   Sawyer Larkin
   3:base_motion/shaft_encoders.c ****   D.A.T.A.
   4:base_motion/shaft_encoders.c **** 
   5:base_motion/shaft_encoders.c ****   ShaftEncoders.c
   6:base_motion/shaft_encoders.c ****   Routines for monitoring the shaft encoders
   7:base_motion/shaft_encoders.c ****  *************************************************/
   8:base_motion/shaft_encoders.c **** 
   9:base_motion/shaft_encoders.c **** #include <inttypes.h>
  10:base_motion/shaft_encoders.c **** #include <avr/io.h>
  11:base_motion/shaft_encoders.c **** #include <avr/interrupt.h>
  12:base_motion/shaft_encoders.c **** 
  13:base_motion/shaft_encoders.c **** #include "../Avr.h"
  14:base_motion/shaft_encoders.c **** #include "../macros.h"
  15:base_motion/shaft_encoders.c **** 
  16:base_motion/shaft_encoders.c **** #include "motors.h"
  17:base_motion/shaft_encoders.c **** #include "shaft_encoders.h"
  18:base_motion/shaft_encoders.c **** 
  19:base_motion/shaft_encoders.c **** #define STATIS_WHEEL_EN 0
  20:base_motion/shaft_encoders.c **** 
  21:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_TICKS_PORT    D
  22:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_TICKS_PIN     3
  23:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_DIR_PORT      D
  24:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_DIR_PIN       5
  25:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_INTERRUPT     INT1
  26:base_motion/shaft_encoders.c **** #define ENCODERS_LEFT_INT_VECT      INT1_vect
  27:base_motion/shaft_encoders.c **** 
  28:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_TICKS_PORT   D
  29:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_TICKS_PIN    2
  30:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_DIR_PORT     D
  31:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_DIR_PIN      4
  32:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_INTERRUPT    INT0
  33:base_motion/shaft_encoders.c **** #define ENCODERS_RIGHT_INT_VECT     INT0_vect
  34:base_motion/shaft_encoders.c **** 
  35:base_motion/shaft_encoders.c **** #define ENCODERS_EICRA_MASK         BIT( ISC00 ) | BIT( ISC10 ) 
  36:base_motion/shaft_encoders.c **** 
  37:base_motion/shaft_encoders.c **** #if ENCODERS_STATIS_WHEEL_EN
  38:base_motion/shaft_encoders.c **** #define STASIS_EICRB_MASK       BIT( ISC50 ) | BIT( ISC51 )
  39:base_motion/shaft_encoders.c **** #endif
  40:base_motion/shaft_encoders.c ****      
  41:base_motion/shaft_encoders.c **** #if STATIS_WHEEL_EN
  42:base_motion/shaft_encoders.c **** #define ENCODERS_STASIS_TICKS_PORT  E
  43:base_motion/shaft_encoders.c **** #define ENCODERS_STASIS_TICKS_PIN   5
  44:base_motion/shaft_encoders.c **** #define ENCODERS_STASIS_DIR_PORT    A
  45:base_motion/shaft_encoders.c **** #define ENCODERS_STASIS_DIR_PIN     7
  46:base_motion/shaft_encoders.c **** #endif
  47:base_motion/shaft_encoders.c **** 
  48:base_motion/shaft_encoders.c **** #define ENCODERS_RISING_EDGE    0
  49:base_motion/shaft_encoders.c **** #define ENCODERS_FALLING_EDGE   1
  50:base_motion/shaft_encoders.c **** 
  51:base_motion/shaft_encoders.c **** /* Global variable definitions */
  52:base_motion/shaft_encoders.c **** volatile int16_t g_shaft_encoders_left_count = 0;
  53:base_motion/shaft_encoders.c **** volatile int16_t g_shaft_encoders_right_count = 0;
  54:base_motion/shaft_encoders.c **** volatile int16_t g_shaft_encoders_stasis_count = 0;
  55:base_motion/shaft_encoders.c **** 
  56:base_motion/shaft_encoders.c **** /** Initializes the AVR
  57:base_motion/shaft_encoders.c **** */
  58:base_motion/shaft_encoders.c **** void Shaft_Encoders_Init( void  )
  59:base_motion/shaft_encoders.c **** {
  77               	.LM0:
  78               	.LFBB1:
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  60:base_motion/shaft_encoders.c ****     // Set pins as input
  61:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_LEFT_TICKS_PORT, ENCODERS_LEFT_TICKS_PIN );
  82               	.LM1:
  83 0000 5398      		cbi 42-32,3
  62:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_LEFT_DIR_PORT, ENCODERS_LEFT_DIR_PIN );
  85               	.LM2:
  86 0002 5598      		cbi 42-32,5
  63:base_motion/shaft_encoders.c **** 
  64:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_RIGHT_TICKS_PORT, ENCODERS_RIGHT_TICKS_PIN );
  88               	.LM3:
  89 0004 5298      		cbi 42-32,2
  65:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_RIGHT_DIR_PORT, ENCODERS_RIGHT_DIR_PIN );
  91               	.LM4:
  92 0006 5498      		cbi 42-32,4
  66:base_motion/shaft_encoders.c **** 
  67:base_motion/shaft_encoders.c **** #if STATIS_WHEEL_EN
  68:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_STASIS_TICKS_PORT, ENCODERS_STASIS_TICKS_PIN );
  69:base_motion/shaft_encoders.c ****     INPUT_PIN( ENCODERS_STASIS_DIR_PORT, ENCODERS_STASIS_DIR_PIN );
  70:base_motion/shaft_encoders.c **** #endif
  71:base_motion/shaft_encoders.c **** 
  72:base_motion/shaft_encoders.c ****     // Disable pull-up
  73:base_motion/shaft_encoders.c ****     DISABLE_PULLUP( ENCODERS_LEFT_TICKS_PORT, ENCODERS_LEFT_TICKS_PIN );
  94               	.LM5:
  95 0008 5B98      		cbi 43-32,3
  74:base_motion/shaft_encoders.c ****     DISABLE_PULLUP( ENCODERS_RIGHT_TICKS_PORT, ENCODERS_RIGHT_TICKS_PIN );
  97               	.LM6:
  98 000a 5A98      		cbi 43-32,2
  75:base_motion/shaft_encoders.c **** 
  76:base_motion/shaft_encoders.c ****     DISABLE_PULLUP( ENCODERS_LEFT_DIR_PORT, ENCODERS_LEFT_DIR_PIN );
 100               	.LM7:
 101 000c 5D98      		cbi 43-32,5
  77:base_motion/shaft_encoders.c ****     DISABLE_PULLUP( ENCODERS_RIGHT_DIR_PORT, ENCODERS_RIGHT_DIR_PIN );
 103               	.LM8:
 104 000e 5C98      		cbi 43-32,4
  78:base_motion/shaft_encoders.c **** 
  79:base_motion/shaft_encoders.c ****     // Set interupts as rising edge triggered
  80:base_motion/shaft_encoders.c ****     EICRA |= ENCODERS_EICRA_MASK;
 106               	.LM9:
 107 0010 E9E6      		ldi r30,lo8(105)
 108 0012 F0E0      		ldi r31,hi8(105)
 109 0014 8081      		ld r24,Z
 110 0016 8560      		ori r24,lo8(5)
 111 0018 8083      		st Z,r24
  81:base_motion/shaft_encoders.c **** 
  82:base_motion/shaft_encoders.c **** 
  83:base_motion/shaft_encoders.c **** #if STATIS_WHEEL_EN
  84:base_motion/shaft_encoders.c ****     EICRB |= STASIS_EICRB_MASK;  
  85:base_motion/shaft_encoders.c **** #endif
  86:base_motion/shaft_encoders.c **** 
  87:base_motion/shaft_encoders.c ****     // Enable the interupts - Interrupts should be globally disabled
  88:base_motion/shaft_encoders.c ****     EIMSK |= BIT( ENCODERS_LEFT_INTERRUPT ) | BIT( ENCODERS_RIGHT_INTERRUPT );
 113               	.LM10:
 114 001a 8DB3      		in r24,61-32
 115 001c 8360      		ori r24,lo8(3)
 116 001e 8DBB      		out 61-32,r24
 117               	/* epilogue start */
  89:base_motion/shaft_encoders.c **** 
  90:base_motion/shaft_encoders.c **** #if STATIS_WHEEL_EN
  91:base_motion/shaft_encoders.c ****     EIMSK |= BIT ( STASIS_WHEEL_INTERRUPT );
  92:base_motion/shaft_encoders.c **** #endif
  93:base_motion/shaft_encoders.c **** }
 119               	.LM11:
 120 0020 0895      		ret
 122               	.Lscope1:
 124               		.stabd	78,0,0
 126               	.global	__vector_2
 128               	__vector_2:
 129               		.stabd	46,0,0
  94:base_motion/shaft_encoders.c ****  
  95:base_motion/shaft_encoders.c **** ISR( ENCODERS_LEFT_INT_VECT )
  96:base_motion/shaft_encoders.c **** { 
 131               	.LM12:
 132               	.LFBB2:
 133 0022 1F92      		push __zero_reg__
 134 0024 0F92      		push r0
 135 0026 0FB6      		in r0,__SREG__
 136 0028 0F92      		push r0
 137 002a 1124      		clr __zero_reg__
 138 002c 8F93      		push r24
 139 002e 9F93      		push r25
 140               	/* prologue: Signal */
 141               	/* frame size = 0 */
  97:base_motion/shaft_encoders.c ****     if ( READ_PIN( ENCODERS_LEFT_DIR_PORT, ENCODERS_LEFT_DIR_PIN ) )
 143               	.LM13:
 144 0030 89B1      		in r24,41-32
 145 0032 8295      		swap r24
 146 0034 8695      		lsr r24
 147 0036 8770      		andi r24,lo8(7)
 148 0038 80FF      		sbrs r24,0
 149 003a 00C0      		rjmp .L4
  98:base_motion/shaft_encoders.c ****     {
  99:base_motion/shaft_encoders.c ****         --g_shaft_encoders_left_count;
 151               	.LM14:
 152 003c 8091 0000 		lds r24,g_shaft_encoders_left_count
 153 0040 9091 0000 		lds r25,(g_shaft_encoders_left_count)+1
 154 0044 0197      		sbiw r24,1
 155 0046 00C0      		rjmp .L7
 156               	.L4:
 100:base_motion/shaft_encoders.c ****     }
 101:base_motion/shaft_encoders.c ****     else
 102:base_motion/shaft_encoders.c ****     {
 103:base_motion/shaft_encoders.c ****         ++g_shaft_encoders_left_count;
 158               	.LM15:
 159 0048 8091 0000 		lds r24,g_shaft_encoders_left_count
 160 004c 9091 0000 		lds r25,(g_shaft_encoders_left_count)+1
 161 0050 0196      		adiw r24,1
 162               	.L7:
 163 0052 9093 0000 		sts (g_shaft_encoders_left_count)+1,r25
 164 0056 8093 0000 		sts g_shaft_encoders_left_count,r24
 165               	/* epilogue start */
 104:base_motion/shaft_encoders.c ****     }
 105:base_motion/shaft_encoders.c **** }
 167               	.LM16:
 168 005a 9F91      		pop r25
 169 005c 8F91      		pop r24
 170 005e 0F90      		pop r0
 171 0060 0FBE      		out __SREG__,r0
 172 0062 0F90      		pop r0
 173 0064 1F90      		pop __zero_reg__
 174 0066 1895      		reti
 176               	.Lscope2:
 178               		.stabd	78,0,0
 180               	.global	__vector_1
 182               	__vector_1:
 183               		.stabd	46,0,0
 106:base_motion/shaft_encoders.c **** 
 107:base_motion/shaft_encoders.c **** ISR( ENCODERS_RIGHT_INT_VECT )
 108:base_motion/shaft_encoders.c **** {
 185               	.LM17:
 186               	.LFBB3:
 187 0068 1F92      		push __zero_reg__
 188 006a 0F92      		push r0
 189 006c 0FB6      		in r0,__SREG__
 190 006e 0F92      		push r0
 191 0070 1124      		clr __zero_reg__
 192 0072 8F93      		push r24
 193 0074 9F93      		push r25
 194               	/* prologue: Signal */
 195               	/* frame size = 0 */
 109:base_motion/shaft_encoders.c ****     if ( READ_PIN( ENCODERS_RIGHT_DIR_PORT, ENCODERS_RIGHT_DIR_PIN ) )
 197               	.LM18:
 198 0076 89B1      		in r24,41-32
 199 0078 8295      		swap r24
 200 007a 8F70      		andi r24,lo8(15)
 201 007c 80FF      		sbrs r24,0
 202 007e 00C0      		rjmp .L9
 110:base_motion/shaft_encoders.c ****     {
 111:base_motion/shaft_encoders.c ****         ++g_shaft_encoders_right_count;
 204               	.LM19:
 205 0080 8091 0000 		lds r24,g_shaft_encoders_right_count
 206 0084 9091 0000 		lds r25,(g_shaft_encoders_right_count)+1
 207 0088 0196      		adiw r24,1
 208 008a 00C0      		rjmp .L12
 209               	.L9:
 112:base_motion/shaft_encoders.c ****     }
 113:base_motion/shaft_encoders.c ****     else
 114:base_motion/shaft_encoders.c ****     {
 115:base_motion/shaft_encoders.c ****         --g_shaft_encoders_right_count;
 211               	.LM20:
 212 008c 8091 0000 		lds r24,g_shaft_encoders_right_count
 213 0090 9091 0000 		lds r25,(g_shaft_encoders_right_count)+1
 214 0094 0197      		sbiw r24,1
 215               	.L12:
 216 0096 9093 0000 		sts (g_shaft_encoders_right_count)+1,r25
 217 009a 8093 0000 		sts g_shaft_encoders_right_count,r24
 218               	/* epilogue start */
 116:base_motion/shaft_encoders.c ****     }
 117:base_motion/shaft_encoders.c **** }  
 220               	.LM21:
 221 009e 9F91      		pop r25
 222 00a0 8F91      		pop r24
 223 00a2 0F90      		pop r0
 224 00a4 0FBE      		out __SREG__,r0
 225 00a6 0F90      		pop r0
 226 00a8 1F90      		pop __zero_reg__
 227 00aa 1895      		reti
 229               	.Lscope3:
 231               		.stabd	78,0,0
 232               	.global	g_shaft_encoders_left_count
 233               	.global	g_shaft_encoders_left_count
 234               		.section .bss
 237               	g_shaft_encoders_left_count:
 238 0000 0000      		.skip 2,0
 239               	.global	g_shaft_encoders_right_count
 240               	.global	g_shaft_encoders_right_count
 243               	g_shaft_encoders_right_count:
 244 0002 0000      		.skip 2,0
 245               	.global	g_shaft_encoders_stasis_count
 246               	.global	g_shaft_encoders_stasis_count
 249               	g_shaft_encoders_stasis_count:
 250 0004 0000      		.skip 2,0
 254               		.text
 256               	.Letext0:
 257               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 shaft_encoders.c
     /tmp/ccZI57lg.s:2      *ABS*:0000003f __SREG__
     /tmp/ccZI57lg.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccZI57lg.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccZI57lg.s:5      *ABS*:00000034 __CCP__
     /tmp/ccZI57lg.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccZI57lg.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccZI57lg.s:74     .text:00000000 Shaft_Encoders_Init
     /tmp/ccZI57lg.s:128    .text:00000022 __vector_2
     /tmp/ccZI57lg.s:237    .bss:00000000 g_shaft_encoders_left_count
     /tmp/ccZI57lg.s:182    .text:00000068 __vector_1
     /tmp/ccZI57lg.s:243    .bss:00000002 g_shaft_encoders_right_count
     /tmp/ccZI57lg.s:249    .bss:00000004 g_shaft_encoders_stasis_count

UNDEFINED SYMBOLS
__do_clear_bss
