#!/bin/bash

# Script written to monitor and control the DATA robot by Sawyer Larkin


NAME=`basename $0`

display_usage() 
{ 
  echo "Usage: $NAME [options]"  1>&2
  echo "" 1>&2
  echo "Reads the voltage and current draw for the DATA robot via I2C." 1>&2
  echo "" 1>&2
  echo "If count or single options are not specified the values will be continuously polled." 1>&2
  echo "If no I2C setup options are specified they will attempt to be set by the " 1>&2
  echo "environment variables: DATA_BASE_I2C_BUS and DATA_BB_TRAINER_I2C_ADDR." 1>&2
  echo "" 1>&2
  echo "  -a=ADDRESS  I2C board address to be used" 1>&2
  echo "  -b=BUS      I2C bus number to be used" 1>&2
  echo "  -c=COUNT    Number of times to read and print the time value" 1>&2
  echo "  -h          Print this message" 1>&2
  echo "  -s          Read the encoders a single time" 1>&2
  echo "  -v          Verbose, print various config parameters" 1>&2
	exit 1
}

INVALID=INVALID
VERBOSE=0
COUNT=-1

# Assign I2C parameters from environment vars if possible
I2C_BUS=${DATA_BASE_I2C_BUS:-$INVALID}
I2C_BOARD=${DATA_BB_TRAINER_I2C_ADDR:-$INVALID}

while getopts "a:b:c:hsv" opt
do
  case ${opt} in
    a )
      I2C_BOARD=$OPTARG
      ;;
    b )
      I2C_BUS=$OPTARG
      ;;
    c )
      COUNT=$OPTARG
      ;;
    h )
      display_usage
      exit 0
      ;;
    s )
      COUNT=1
      ;;
    v )
      VERBOSE=1
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      display_usage
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      display_usage
      ;;
  esac
done
shift $((OPTIND -1))

if ! [[ $I2C_BUS =~ ^[0-9xXaAbBcCdDeEfF]+$ ]]
then
  echo "No valid I2C bus specified!" 1>&2
  echo "I2C Bus Number:    $I2C_BUS" 1>&2
  echo "I2C Board Address: $I2C_BOARD" 1>&2
	display_usage
fi

if ! [[ $I2C_BOARD =~ ^[0-9xXaAbBcCdDeEfF]+$ ]]
then
  echo "No valid I2C board address specified!" 1>&2
  echo "I2C Bus Number:    $I2C_BUS" 1>&2
  echo "I2C Board Address: $I2C_BOARD" 1>&2
	display_usage
fi

if [[ VERBOSE -ne 0 ]]
then
  echo "I2C Bus Number:    $I2C_BUS"
  echo "I2C Board Address: $I2C_BOARD"
  echo
fi

while [[ $COUNT -ne 0 ]]
do
  echo "------------------------------------------------------"
  V_READING=`i2cget -y $I2C_BUS $I2C_BOARD 0x12 w`

  V_DEC=$((16#${V_READING:2}))
  VOLTAGE=`echo "$V_DEC * 0.02" | bc`
  
  echo "Reading: $V_READING Voltage: $VOLTAGE"

  C_READING=`i2cget -y $I2C_BUS $I2C_BOARD 0x14 w`
  
  C_DEC=$((16#${C_READING:2}))
  CURRENT=`echo "($C_DEC * 0.03759) - 3.8492" | bc`
  
  echo "Reading: $C_READING Current: $CURRENT"
 
  echo
  sleep 0.25

  if [[ $COUNT -gt 0 ]]
  then
    COUNT=$((COUNT - 1))
  fi
done
