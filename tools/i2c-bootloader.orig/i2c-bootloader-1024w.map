Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
                              i2c-bootloader-led.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

smbuscount          0x1               i2c-bootloader-led.o
Checksum            0x1               i2c-bootloader-led.o
pageaddr            0x4               i2c-bootloader-led.o
kommando            0x1               i2c-bootloader-led.o
timeout             0x2               i2c-bootloader-led.o
byteanzahl          0x1               i2c-bootloader-led.o
buf                 0x40              i2c-bootloader-led.o
smbuscommand        0x1               i2c-bootloader-led.o
bufaddr             0x1               i2c-bootloader-led.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
Address of section .text set to 0x1800
LOAD i2c-bootloader-led.o
LOAD /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00001800      0x3ee
 *(.vectors)
 .vectors       0x00001800       0x26 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
                0x00001800                __vectors
                0x00001800                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00001826                . = ALIGN (0x2)
                0x00001826                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00001826        0x0 linker stubs
 *(.trampolines*)
                0x00001826                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00001826                __ctors_start = .
 *(.ctors)
                0x00001826                __ctors_end = .
                0x00001826                __dtors_start = .
 *(.dtors)
                0x00001826                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00001826        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
                0x00001826                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00001826        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00001832       0x10 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
                0x00001832                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00001842        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00001846        0x2 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
                0x00001846                __vector_1
                0x00001846                __vector_12
                0x00001846                __bad_interrupt
                0x00001846                __vector_6
                0x00001846                __vector_3
                0x00001846                __vector_11
                0x00001846                __vector_13
                0x00001846                __vector_7
                0x00001846                __vector_5
                0x00001846                __vector_4
                0x00001846                __vector_9
                0x00001846                __vector_2
                0x00001846                __vector_15
                0x00001846                __vector_8
                0x00001846                __vector_14
                0x00001846                __vector_10
                0x00001846                __vector_16
                0x00001846                __vector_18
 .text          0x00001848      0x3a2 i2c-bootloader-led.o
                0x00001848                blink
                0x0000187a                __vector_17
                0x00001ab2                init_twi
                0x00001acc                boot_program_page
                0x00001b48                main
 .text          0x00001bea        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
 .text          0x00001bea        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
                0x00001bea                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001bea        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001bea        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
                0x00001bea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001bea        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
                0x00001bea                exit
                0x00001bea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001bea        0x4 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00001bee                _etext = .

.data           0x00800060        0x0 load address 0x00001bee
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 i2c-bootloader-led.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x4c
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x0 i2c-bootloader-led.o
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_exit.o)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.3.5/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060       0x4c i2c-bootloader-led.o
                0x00800060                smbuscount
                0x00800061                Checksum
                0x00800062                pageaddr
                0x00800066                kommando
                0x00800067                timeout
                0x00800069                byteanzahl
                0x0080006a                buf
                0x008000aa                smbuscommand
                0x008000ab                bufaddr
                0x008000ac                PROVIDE (__bss_end, .)
                0x00001bee                __data_load_start = LOADADDR (.data)
                0x00001bee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000ac        0x0
                0x008000ac                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000ac                PROVIDE (__noinit_end, .)
                0x008000ac                _end = .
                0x008000ac                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1254
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o
 .stab          0x000006b4      0xba0 i2c-bootloader-led.o
                                0xbac (size before relaxing)

.stabstr        0x00000000      0xbce
 *(.stabstr)
 .stabstr       0x00000000      0xbce /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(i2c-bootloader-1024w elf32-avr)
LOAD linker stubs
